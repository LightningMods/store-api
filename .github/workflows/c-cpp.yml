on: [ push, pull_request, workflow_dispatch ]

jobs:
  build_library:
    runs-on: ubuntu-20.04
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkout oosdk_libraries
      uses: actions/checkout@v3
      with:
        repository: bucanero/oosdk_libraries
        path: oosdk_libraries

    - name: Checkout libjbc
      uses: actions/checkout@v3
      with:
        repository: bucanero/ps4-libjbc
        path: ps4-libjbc

    - name: Set env vars
      run: echo "llvm_ver=12.0" >> $GITHUB_ENV

      # temporary release until 0.53 is released
    - name: Download OpenOrbis Toolchain
      run: |
        curl -sL https://github.com/LightningMods/OpenOrbis-PS4-Toolchain/releases/download/v0.50001/OOSDK.tar.gz | tar xvz -C ./
        echo "OO_PS4_TOOLCHAIN=${GITHUB_WORKSPACE}/OpenOrbis/PS4Toolchain" >> $GITHUB_ENV
        cp oosdk_libraries/build_rules.mk OpenOrbis/PS4Toolchain/build_rules.mk

    - name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v3
      with:
        path: ./llvm
        key: llvm-${{ env.llvm_ver }}

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: ${{ env.llvm_ver }}
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Install zlib
      working-directory: oosdk_libraries/zlib_partial
      run: make install

    - name: Install polarssl
      working-directory: oosdk_libraries/polarssl-1.3.9
      run: make install

    - name: Install libjbc
      working-directory: ps4-libjbc
      run: make install

    - name: Install libcurl library
      working-directory: oosdk_libraries/curl-7.64.1
      run: |
        mkdir orbis && cd orbis
        wget https://raw.githubusercontent.com/bucanero/SDL-PS4/ps4/cmake/openorbis.cmake
        cmake --toolchain openorbis.cmake .. -DCMAKE_USE_POLARSSL=1 -DUSE_UNIX_SOCKETS=0 -DENABLE_THREADED_RESOLVER=0 -DENABLE_IPV6=0
        make libcurl
        cp lib/libcurl.a "${OO_PS4_TOOLCHAIN}/lib"
        cp -R ../include/curl "${OO_PS4_TOOLCHAIN}/include/"

    - name: build store-api
      run: |
        make install
        tar cf store_api.tar *.a *.prx

    - name: Push tarball
      uses: actions/upload-artifact@v3
      with:
        name: store_api.tar
        path: store_api.tar
        if-no-files-found: error
        retention-days: 7 # don't keep artifacts for too long
